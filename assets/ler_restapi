import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'dart:async';

void main() {
  runApp(MaterialApp(
    debugShowCheckedModeBanner: false,
    home: HomePage(),
  ));
}

class HomePage extends StatefulWidget {
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  Map data;
  List userData;

  Future lerDados() async {
    http.Response response =
        await http.get("http://52.67.253.92/noticias.php");
//    debugPrint(response.body);
    data = json.decode(response.body);
    setState(() {
      userData = data["noticias"];
    });
//    debugPrint(userData.toString());
  }

  @override
  void initState() {
    super.initState();
    lerDados();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Home Page'),
        backgroundColor: Colors.green,
      ),
      body: ListView.builder(
          itemCount: userData == null ? 0 : userData.length,
          itemBuilder: (BuildContext context, int index) {
            return Card(
              elevation: 3.0,
              margin: EdgeInsets.only(left: 10.0, top: 10.0, right: 10.0),
              child: Container(
                height: 80.0,
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: <Widget>[
                      Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: <Widget>[
                          Container(
                            margin: EdgeInsets.only(left: 7.0, right: 9.0),
                            child:
                            CircleAvatar(
                              backgroundImage: NetworkImage(userData[index]['imageUrl']),
                              radius: 32.0,
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: <Widget>[
                            SizedBox(
                              height: 3.0,
                            ),
                          Text('${userData[index]['titulo']}',
                            maxLines: 2,
                            overflow: TextOverflow.ellipsis,
                              style: TextStyle(
                                fontFamily: 'Libre',
                                fontSize: 15.0,
                                color: Colors.blueAccent,
                                fontWeight: FontWeight.w600,
                              ),
                            ),
                        Text('${userData[index]['texto']}',
                              maxLines: 2,
                              overflow: TextOverflow.ellipsis,
                              style: TextStyle(
                                fontFamily: 'Libre',
                                fontSize: 13.0,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  )),
            );
          }),
    );
  }
}




            new Container(
              height: 80.0,
              color: Colors.greenAccent,
              child: new ListView(
                scrollDirection: Axis.horizontal,
                children: new List.generate(
                  10,
                  (int index) {
                    return new Card(
                      color: Colors.blue[index * 100],
                      child: new Container(
                        width: 50.0,
                        height: 50.0,
                        child: new Text("$index"),
                      ),
                    );
                  },
                ),
              ),
            ),








/*



    return Column(
      children: <Widget>[
        Container(
          margin: EdgeInsets.only(right: 12.0),


          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Stack(
                alignment: Alignment(0.0, 0.0),
                children: <Widget>[
                  CircleAvatar(
//                  backgroundColor: Colors.red,
                    backgroundColor: Colors.white,
                    radius: 44.0,
                  ),
                  CircleAvatar(
                    backgroundColor: Colors.black87,
                    radius: 42.0,
                  ),
                  CircleAvatar(
                    backgroundImage: NetworkImage(
                      dados[1]['imageUrl'],
                      scale: 0.2,
                    ),
                    radius: 40.0,
                  ),
                ],
              ),
              SizedBox(
                height: 3.0,
              ),
//              Text(
//                provedor[i]['title'],
//                style: TextStyle(
//                  fontFamily: 'Rubik',
//                  fontSize: 14.0,
//                ),
 //             )
            ],
          ),



        ),
      ],
    );
  }

}




*/




/*

                  Expanded(
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        SizedBox(
                          height: 3.0,
                        ),
                        Text(
                          '${dados[index]['titulo']}',
                          maxLines: 2,
                          overflow: TextOverflow.ellipsis,
                          style: TextStyle(
                            fontFamily: 'Libre',
                            fontSize: 15.0,
                            color: Colors.blueAccent,
                            fontWeight: FontWeight.w600,
                          ),
                        ),
                        Text(
                          '${dados[index]['texto']}',
                          maxLines: 2,
                          overflow: TextOverflow.ellipsis,
                          style: TextStyle(
                            fontFamily: 'Libre',
                            fontSize: 13.0,
                          ),
                        ),
                      ],
                    ),
                  ),


 */

/*

    return Container(
      padding: EdgeInsets.only(top: 10.0, bottom: 0.0),
      height: 125.0,
      child: ListView(
        scrollDirection: Axis.horizontal,
        children: <Widget>[
          Text('1')
        ],
      ),
    );
  }
}




  return Column(
    children: <Widget>[
      Container(
        margin: EdgeInsets.only(right: 12.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Stack(
              alignment: Alignment(0.0, 0.0),
              children: <Widget>[
                CircleAvatar(
//                  backgroundColor: Colors.red,
                  backgroundColor: Colors.white,
                  radius: 44.0,
                ),
                CircleAvatar(
                  backgroundColor: Colors.black87,
                  radius: 42.0,
                ),
                CircleAvatar(
                  backgroundImage: NetworkImage(
                    dados[i]['imageUrl'],
                    scale: 0.2,
                  ),
                  radius: 40.0,
                ),
              ],
            ),
            SizedBox(
              height: 3.0,
            ),
            Text(
              dados[i]['title'],
              style: TextStyle(
                fontFamily: 'Rubik',
                fontSize: 14.0,
              ),
            )
          ],
        ),
      ),
    ],
  );

  */
